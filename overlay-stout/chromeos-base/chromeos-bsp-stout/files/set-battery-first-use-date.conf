# Copyright (c) 2012 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description "Update the battery first-use-date"
author      "chromium-os-dev@chromium.org"

start on started system-services
stop on stopping system-services

script
  # Set battery first use date (FUD). This is a date that is programmed into
  # the battery and can be set only once per battery. The script runs at
  # startup and checks for pre-existing FUD. If FUD does not exist in
  # battery, we will wait for a time sync and update FUD with the current
  # time. If attempting to re-program FUD on a battery that has already set
  # FUD, FUD will not be re-programmed.
  NAME="set-battery-first-use-date.conf"
  # TIMEFILE is updated by tlsdated whenever a time remote sync occurs.
  TIMEFILE="/var/cache/tlsdated/timestamp"
  CHECK_TIMESTAMP="stat -c %Y ${TIMEFILE}"
  SET_FUD="mosys battery set fud"
  GET_FUD="mosys battery print fud"
  # Initial FUD date of battery - indicates FUD not set.
  FUD_CLEAR_DATE="1980/00/00"

  # Never run from a factory image.
  if [ -f /root/.factory_test -o -f /root/.factory_installer ]; then
    exit 0
  fi

  # Get initial timestamp of TIMEFILE - we don't care about the contents
  # of this file, only its timestamp. We will check the timestamp later
  # to see if a remote time sync occurred.
  if [ -e "${TIMEFILE}" ]; then
    timestamp="$(${CHECK_TIMESTAMP})"
  else
    timestamp="-1"
  fi

  # If a new battery is inserted, EC will start battery authentication, and
  # this will block mosys from getting the FUD. Wait 200 secs. to allow
  # battery authentication to complete and to allow other processes to probe
  # the EC.
  sleep 200

  if [ "$(${GET_FUD} || true)" != "${FUD_CLEAR_DATE}" ]; then
    logger "${NAME}: FUD-less battery not found, not setting FUD"
    exit 0
  fi

  logger "${NAME}: Waiting for time sync to set FUD"

  # Wait for remote sync of clock, then write first-use-date.
  while true; do
    sleep 200
    if [ -e "${TIMEFILE}" ]; then
      if [ "${timestamp}" != "$(${CHECK_TIMESTAMP})" ]; then
        result="$(${SET_FUD} 2>&1 || true)"
        logger "${NAME}: Battery Set FUD Result: $? - ${result}"
        exit 0
      fi
    fi
  done
end script
