# Copyright (c) 2014 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Configure the database for moblab"
author        "chromium-os-dev@chromium.org"

start on stopped autotest_setup
respawn

pre-start script
  MYSQL_LIB_DIR=/var/lib/mysql
  if [ ! -d "${MYSQL_LIB_DIR}" ]; then
    mkdir -p "${MYSQL_LIB_DIR}"
    chown -R mysql:mysql "${MYSQL_LIB_DIR}"
  fi

  MYSQL_RUN_DIR=/var/run/mysqld
  if [ ! -d "${MYSQL_RUN_DIR}" ]; then
    mkdir -p "${MYSQL_RUN_DIR}"
    chown -R mysql:mysql "${MYSQL_RUN_DIR}"
  fi

  MYSQL_LOG_DIR=/var/log/mysql
  if [ ! -d "${MYSQL_LOG_DIR}" ]; then
    mkdir -p "${MYSQL_LOG_DIR}"
    chown -R mysql:mysql "${MYSQL_LOG_DIR}"
  fi

  # The below command won't work if the database has already been installed
  # as it is not supplying the set password.
  /usr/share/mysql/scripts/mysql_install_db --user=mysql \
    --ldata="${MYSQL_LIB_DIR}" --basedir=/usr/
end script

post-start script
  # Wait for the service to come up.
  SLEEP_TIME=2
  while [ ! -e /var/run/mysqld/mysqld.sock ]; do
    echo "mysqld not up. Sleeping ${SLEEP_TIME} seconds."
    sleep 2
  done
  passwd=$(sed -n '/^password: /{s,^[^:]*: *,,p;q}' \
    /usr/local/autotest/shadow_config.ini)

  if mysql -u root; then
    mysqladmin -u root password "${passwd}"
  fi

  PASSWD_STRING="-p${passwd}"

  clobberdb=
  DATABASE_LOOKUP_SQL="SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA \
    WHERE SCHEMA_NAME = 'chromeos_autotest_db'"
  EXISTING_DATABASE=$(mysql -u root "${PASSWD_STRING}" -e "${DATABASE_LOOKUP_SQL}")
  if [ -z "${EXISTING_DATABASE}" ]; then
    clobberdb=true
  fi

  SQL_COMMAND="drop database if exists chromeos_autotest_db; \
    create database chromeos_autotest_db; \
    grant all privileges on chromeos_autotest_db.* TO \
    'chromeosqa-admin'@'localhost' identified by '${passwd}'; \
    FLUSH PRIVILEGES;"

  if [ "${clobberdb}" = true ]; then
    mysql -u root "${PASSWD_STRING}" -e "${SQL_COMMAND}"
  fi

  AT_DIR="/usr/local/autotest"
  python2.7 "${AT_DIR}"/database/migrate.py sync -f
  python2.7 "${AT_DIR}"/frontend/manage.py syncdb --noinput
  # You may have to run this twice.
  python2.7 "${AT_DIR}"/frontend/manage.py syncdb --noinput
  python2.7 "${AT_DIR}"/utils/test_importer.py

end script

exec /usr/sbin/mysqld
