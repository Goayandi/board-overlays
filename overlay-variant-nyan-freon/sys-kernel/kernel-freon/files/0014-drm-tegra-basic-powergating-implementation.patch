From 8bbccc2e18fa7fcc898200cade4c0d73ab2408f6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Marchesin?= <marcheu@chromium.org>
Date: Thu, 26 Jun 2014 15:06:47 -0700
Subject: [PATCH 14/15] drm/tegra: basic powergating implementation

Change-Id: I51fe3fe2e489adc9ada3e3782f9f93f1764bdcd7
---
 drivers/gpu/drm/tegra/dc.c | 40 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)

diff --git a/drivers/gpu/drm/tegra/dc.c b/drivers/gpu/drm/tegra/dc.c
index 059705e..0852a4b 100644
--- a/drivers/gpu/drm/tegra/dc.c
+++ b/drivers/gpu/drm/tegra/dc.c
@@ -10,6 +10,7 @@
 #include <linux/clk.h>
 #include <linux/debugfs.h>
 #include <linux/reset.h>
+#include <linux/tegra-powergate.h>
 
 #include "dc.h"
 #include "drm.h"
@@ -24,6 +25,41 @@ struct tegra_plane {
 	unsigned int index;
 };
 
+static int tegra_dc_get_powergate_id(struct tegra_dc *dc)
+{
+	switch (dc->pipe)
+	{
+		default:
+			WARN_ONCE(1, "Unknown pipe number\n");
+		case 0:
+			return TEGRA_POWERGATE_DIS;
+		case 1:
+			return TEGRA_POWERGATE_DISB;
+	}
+}
+
+static inline void tegra_dc_powergate_locked(struct tegra_dc *dc)
+{
+	int ret;
+	int powergate_id = tegra_dc_get_powergate_id(dc);
+
+	if (tegra_powergate_is_powered(powergate_id)) {
+		ret = tegra_powergate_partition(powergate_id);
+		if (ret < 0)
+			dev_err(dc->dev, "could not powergate: %d\n", ret);
+	}
+}
+
+static inline void tegra_dc_unpowergate_locked(struct tegra_dc *dc)
+{
+	int ret;
+	int powergate_id = tegra_dc_get_powergate_id(dc);
+
+	ret = tegra_unpowergate_partition(powergate_id);
+	if (ret < 0)
+		dev_err(dc->dev, "could not unpowergate %d\n", ret);
+}
+
 static inline struct tegra_plane *to_tegra_plane(struct drm_plane *plane)
 {
 	return container_of(plane, struct tegra_plane, base);
@@ -1295,6 +1331,8 @@ static int tegra_dc_probe(struct platform_device *pdev)
 	if (err < 0)
 		return err;
 
+	tegra_dc_unpowergate_locked(dc);
+
 	dc->clk = devm_clk_get(&pdev->dev, NULL);
 	if (IS_ERR(dc->clk)) {
 		dev_err(&pdev->dev, "failed to get clock\n");
@@ -1372,6 +1410,8 @@ static int tegra_dc_remove(struct platform_device *pdev)
 	if (dc->emc_clk)
 		clk_disable_unprepare(dc->emc_clk);
 
+	tegra_dc_powergate_locked(dc);
+
 	return 0;
 }
 
-- 
2.0.0.526.g5318336

