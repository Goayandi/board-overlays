# Copyright (c) 2014 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Mount and setup moblab external storage."
author        "chromium-os-dev@chromium.org"

start on started cros-disks and started moblab-database-init
normal exit 0

env MOUNT_DIR=/mnt/moblab
env EXTERNAL_RESULTS_DIR=/mnt/moblab/results
env ATEST_RESULTS_DIR=/usr/local/autotest/results
export ATEST_RESULTS_DIR
env STATIC_DIR=/mnt/moblab/static
export STATIC_DIR

script
  # REQUIRES A USB DRIVE WITH LABEL "MOBLAB-STORAGE"
  usb_drive=$(readlink -f /dev/disk/by-label/MOBLAB-STORAGE)
  if [ -n "${usb_drive}" ]; then
    logger -t "${UPSTART_JOB}" "Mounting external storage using ${usb_drive}."
  else
    logger -t "${UPSTART_JOB}" "No disk labeled MOBLAB-STORAGE found!"
    logger -t "${UPSTART_JOB}" "Moblab will not launch. Please insert a"
    logger -t "${UPSTART_JOB}" "properly configured drive and reboot."
    exit 1
  fi

  if ! mount "${usb_drive}" "${MOUNT_DIR}" -o exec,dev,nosuid; then
    logger -t "${UPSTART_JOB}" "Mounting of ${usb_drive} onto ${MOUNT_DIR}"
    logger -t "${UPSTART_JOB}" "failed. Please reconnect drive and reboot."
    exit 1
  fi

  mkdir -p "${EXTERNAL_RESULTS_DIR}"
  chown -R moblab:moblab "${EXTERNAL_RESULTS_DIR}"
  # If the old results directory exists copy over the files and delete it.
  if [ -e "${ATEST_RESULTS_DIR}" -a ! -L  "${ATEST_RESULTS_DIR}" ]; then
    logger -t "${UPSTART_JOB}" "Copying results directory."
    cp -r "${ATEST_RESULTS_DIR}/" "${MOUNT_DIR}"
    rm -rf "${ATEST_RESULTS_DIR}"
  fi
  # Create the results directory symlink if it does not exist.
  if [ ! -e "${ATEST_RESULTS_DIR}" ]; then
    logger -t "${UPSTART_JOB}" "Creating autotest results dir symlink."
    ln -s "${EXTERNAL_RESULTS_DIR}" "${ATEST_RESULTS_DIR}"
  fi

  # If the database is empty clear out any old files in the results directory.
  local jobcount="$(mysql -u root -pmoblab_db_passwd -D chromeos_autotest_db \
                    -e 'select count(*) from afe_jobs' | tail -1)"
  if [ "${jobcount}" = "0" ]; then
    rm -rf "${EXTERNAL_RESULTS_DIR}"/*
  fi

  mkdir -p "${STATIC_DIR}"
  chown -R moblab:moblab "${MOUNT_DIR}"
end script
