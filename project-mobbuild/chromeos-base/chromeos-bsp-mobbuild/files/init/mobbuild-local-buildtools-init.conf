# Copyright 2015 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# event:shill-connected is emitted by shill indicating that network is up.
start on (started mobbuild-init-begin and
          stopped mobbuild-build-disk-init and
          shill-connected)

script
  info () {
    echo "INFO: $@"
    logger -t "${UPSTART_JOB}" "$@"
  }
  warn () {
    echo "WARN: $@"
    logger -t "${UPSTART_JOB}" -p user.warning "$@"
  }
  err () {
    echo "ERR : $@"
    logger -t "${UPSTART_JOB}" -p user.err "$@"
  }
  die () {
    err "$@"
    exit 1
  }
  as_mobbuild() {
    sudo -u mobbuild "$@"
  }

  # MOBBUILD_BUILD_DIR defined in mobbuild-build-disk-init.conf
  LOCAL_BUILDTOOLS_DIR="${MOBBUILD_BUILD_DIR}/local_buildtools"
  LOCAL_SOURCEROOT_DIR="${LOCAL_BUILDTOOLS_DIR}/chromiumos"
  INITIALIZED_FLAG_FILE="${LOCAL_BUILDTOOLS_DIR}/.mobbuild_initialized"
  MANIFEST_REMOTE='https://chromium.googlesource.com/chromiumos/manifest.git'
  MANIFEST_REPO_URL='https://chromium.googlesource.com/external/repo.git'

  # Redirect stdout, stderr to well known log files.
  exec >"${UPSTART_LOG_DIR}/${UPSTART_JOB}.log" 2>&1

  if [ ! -f "${INITIALIZED_FLAG_FILE}" ]; then
    info "Initializing a new repo at ${LOCAL_SOURCEROOT_DIR}."
    # Hard blow away everything. We may have had a failed initialization attempt
    # earlier.
    rm -rf "${LOCAL_BUILDTOOLS_DIR}"
    as_mobbuild mkdir -m 0755 -p "${LOCAL_SOURCEROOT_DIR}" ||
      die "Could not create toplevel directories."

    cd "${LOCAL_SOURCEROOT_DIR}"
    if ! as_mobbuild repo init -u "${MANIFEST_REMOTE}" \
        --repo-url "${MANIFEST_REPO_URL}" -g buildtools; then
      die "Failed to initialize new repo at ${LOCAL_SOURCEROOT_DIR}."
    fi

    as_mobbuild tee "${INITIALIZED_FLAG_FILE}" >/dev/null <<"__EOF__"
DO NOT REMOVE THIS FILE.
If you remove this file, this checkout will be re-created on next boot.
__EOF__

  fi

  # Always try to bring the local_buildtools up to date.
  # Log when done, because this can take some time.
  info "Bringing checkout up-to-date."
  cd "${LOCAL_SOURCEROOT_DIR}"
  if as_mobbuild repo sync -qd; then
    info "Local buildtools successfully updated."
  else
    warn "Could not sync repo at ${LOCAL_SOURCEROOT_DIR}."
  fi
end script
