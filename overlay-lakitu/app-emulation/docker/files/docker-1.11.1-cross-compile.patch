From 1c660e625dd24626ed346d325b1ce5f06e95fbcd Mon Sep 17 00:00:00 2001
From: Aditya Kali <adityakali@google.com>
Date: Tue, 17 May 2016 13:45:04 -0700
Subject: [PATCH] cross compile

---
 hack/make/.go-autogen |  2 +-
 hack/make/binary      | 12 ++++++------
 hack/make/gccgo       |  2 +-
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/hack/make/.go-autogen b/hack/make/.go-autogen
index c8e13b4..c4100cd 100644
--- a/hack/make/.go-autogen
+++ b/hack/make/.go-autogen
@@ -48,7 +48,7 @@ make.sh invokes hack/make/.go-autogen to:
 
 */
 WREOF
-if [ "$(go env GOOS)" = 'windows' ]; then
+if [ "$($GO env GOOS)" = 'windows' ]; then
 	rsrc \
 		-manifest hack/make/.resources-windows/docker.exe.manifest \
 		-ico      hack/make/.resources-windows/docker.ico \
diff --git a/hack/make/binary b/hack/make/binary
index 378af76..ad16e83 100644
--- a/hack/make/binary
+++ b/hack/make/binary
@@ -10,9 +10,9 @@ source "${MAKEDIR}/.go-autogen"
 (
 export GOGC=${DOCKER_BUILD_GOGC:-1000}
 
-if [ "$(go env GOOS)/$(go env GOARCH)" != "$(go env GOHOSTOS)/$(go env GOHOSTARCH)" ]; then
+if [ "$($GO env GOOS)/$($GO env GOARCH)" != "$($GO env GOHOSTOS)/$($GO env GOHOSTARCH)" ]; then
 	# must be cross-compiling!
-	case "$(go env GOOS)/$(go env GOARCH)" in
+	case "$($GO env GOOS)/$($GO env GOARCH)" in
 		windows/amd64)
 			export CC=x86_64-w64-mingw32-gcc
 			export CGO_ENABLED=1
@@ -20,8 +20,8 @@ if [ "$(go env GOOS)/$(go env GOARCH)" != "$(go env GOHOSTOS)/$(go env GOHOSTARC
 	esac
 fi
 
-if [ "$(go env GOOS)" == "linux" ] ; then
-	case "$(go env GOARCH)" in
+if [ "$($GO env GOOS)" == "linux" ] ; then
+	case "$($GO env GOARCH)" in
 		arm*|386)
 			# linking for Linux on arm or x86 needs external linking to avoid
 			# https://github.com/golang/go/issues/9510 until we move to Go 1.6
@@ -36,7 +36,7 @@ if [ "$(go env GOOS)" == "linux" ] ; then
 	esac
 fi
 
-if [ "$IAMSTATIC" == "true" ] && [ "$(go env GOHOSTOS)" == "linux" ]; then
+if [ "$IAMSTATIC" == "true" ] && [ "$($GO env GOHOSTOS)" == "linux" ]; then
 	if  [ "${GOOS}/${GOARCH}" == "darwin/amd64" ]; then
 		export CGO_ENABLED=1
 		export CC=o64-clang
@@ -48,7 +48,7 @@ if [ "$IAMSTATIC" == "true" ] && [ "$(go env GOHOSTOS)" == "linux" ]; then
 fi
 
 echo "Building: $DEST/$BINARY_FULLNAME"
-go build \
+$GO build \
 	-o "$DEST/$BINARY_FULLNAME" \
 	"${BUILDFLAGS[@]}" \
 	-ldflags "
diff --git a/hack/make/gccgo b/hack/make/gccgo
index 9da203f..9bb4aa8 100644
--- a/hack/make/gccgo
+++ b/hack/make/gccgo
@@ -11,7 +11,7 @@ if [[ "${BUILDFLAGS[@]}" =~ 'netgo ' ]]; then
 	EXTLDFLAGS_STATIC+=' -lnetgo'
 fi
 # gccgo require explicit flag -pthread to allow goroutines to work.
-go build -compiler=gccgo \
+$GO build -compiler=gccgo \
 	-o "$DEST/$BINARY_FULLNAME" \
 	"${BUILDFLAGS[@]}" \
 	-gccgoflags "
-- 
2.1.2

